// Generated by view binder compiler. Do not edit!
package com.cometexpress.overuniverse.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cometexpress.overuniverse.R;
import com.cometexpress.overuniverse.presentation.custom.LoadingView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHeroInfoBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ConstraintLayout clContainer;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ConstraintLayout constraintLayout2;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final ImageView ivThumb;

  @NonNull
  public final LoadingView loadingView;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final RecyclerView rvAbility;

  @NonNull
  public final RecyclerView rvTotal;

  @NonNull
  public final TextView text;

  @NonNull
  public final TextView text2;

  @NonNull
  public final TextView text3;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvHp;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvRole;

  private ActivityHeroInfoBinding(@NonNull FrameLayout rootView,
      @NonNull ConstraintLayout clContainer, @NonNull ConstraintLayout constraintLayout,
      @NonNull ConstraintLayout constraintLayout2, @NonNull ImageView ivBack,
      @NonNull ImageView ivThumb, @NonNull LoadingView loadingView, @NonNull ConstraintLayout main,
      @NonNull RecyclerView rvAbility, @NonNull RecyclerView rvTotal, @NonNull TextView text,
      @NonNull TextView text2, @NonNull TextView text3, @NonNull TextView tvDescription,
      @NonNull TextView tvHp, @NonNull TextView tvName, @NonNull TextView tvRole) {
    this.rootView = rootView;
    this.clContainer = clContainer;
    this.constraintLayout = constraintLayout;
    this.constraintLayout2 = constraintLayout2;
    this.ivBack = ivBack;
    this.ivThumb = ivThumb;
    this.loadingView = loadingView;
    this.main = main;
    this.rvAbility = rvAbility;
    this.rvTotal = rvTotal;
    this.text = text;
    this.text2 = text2;
    this.text3 = text3;
    this.tvDescription = tvDescription;
    this.tvHp = tvHp;
    this.tvName = tvName;
    this.tvRole = tvRole;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHeroInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHeroInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_hero_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHeroInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cl_container;
      ConstraintLayout clContainer = ViewBindings.findChildViewById(rootView, id);
      if (clContainer == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.constraintLayout2;
      ConstraintLayout constraintLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout2 == null) {
        break missingId;
      }

      id = R.id.iv_back;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.iv_thumb;
      ImageView ivThumb = ViewBindings.findChildViewById(rootView, id);
      if (ivThumb == null) {
        break missingId;
      }

      id = R.id.loading_view;
      LoadingView loadingView = ViewBindings.findChildViewById(rootView, id);
      if (loadingView == null) {
        break missingId;
      }

      id = R.id.main;
      ConstraintLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.rv_ability;
      RecyclerView rvAbility = ViewBindings.findChildViewById(rootView, id);
      if (rvAbility == null) {
        break missingId;
      }

      id = R.id.rv_total;
      RecyclerView rvTotal = ViewBindings.findChildViewById(rootView, id);
      if (rvTotal == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }

      id = R.id.text2;
      TextView text2 = ViewBindings.findChildViewById(rootView, id);
      if (text2 == null) {
        break missingId;
      }

      id = R.id.text3;
      TextView text3 = ViewBindings.findChildViewById(rootView, id);
      if (text3 == null) {
        break missingId;
      }

      id = R.id.tv_description;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tv_hp;
      TextView tvHp = ViewBindings.findChildViewById(rootView, id);
      if (tvHp == null) {
        break missingId;
      }

      id = R.id.tv_name;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tv_role;
      TextView tvRole = ViewBindings.findChildViewById(rootView, id);
      if (tvRole == null) {
        break missingId;
      }

      return new ActivityHeroInfoBinding((FrameLayout) rootView, clContainer, constraintLayout,
          constraintLayout2, ivBack, ivThumb, loadingView, main, rvAbility, rvTotal, text, text2,
          text3, tvDescription, tvHp, tvName, tvRole);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
